
services:
  db:
    container_name: postgresql_db
    image: postgres:16
    restart: unless-stopped
    ports:
      - "5432:5432"
    expose:
      - "5432"
    environment:
      - POSTGRES_USER=$POSTGRES_USER
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
      - POSTGRES_DB=$POSTGRES_DB
    volumes:
      - .:/docker-entrypoint-initdb.d
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 10s 
      retries: 5
      start_period: 10s

  webapi:
    container_name: aspnet_web_api
    build:
      context: ./backend
      dockerfile: ./WebAPI/Dockerfile
    restart: unless-stopped
    env_file: ./backend/WebAPI/.env
    ports:
      - "5000:8080"
    depends_on:
      db:
        condition: service_healthy
        restart: true
      minio:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

  frontend:
    container_name: next_frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      - NODE_TLS_REJECT_UNAUTHORIZED=0
      - SERVER_API_URL=${SERVER_API_URL}
    ports:
      - "3000:3000"
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    depends_on:
      webapi:
        condition: service_started
        restart: true

  minio:
    container_name: minio_s3
    image: minio/minio:RELEASE.2025-07-23T15-54-02Z
    restart: unless-stopped
    command: server /data --console-address ":9001"
    environment:
      - MINIO_ROOT_USER=$MINIO_ROOT_USER
      - MINIO_ROOT_PASSWORD=$MINIO_ROOT_PASSWORD
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
      start_period: 10s
volumes:
  db_data:
  minio_data:
